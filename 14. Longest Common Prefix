class Solution {
    public String longestCommonPrefix(String[] strs) {
        
        if(strs.length==1){
            return strs[0];
        }
        
        int longestCommonPrefix = 0;
        String longestCommonPrefixString = "";
        String tempSubString = "";
        String tempSubString2="";
        int lenaa = strs.length;
        int inHowManyStringsPrefixIs=0;
            for(int i=0;i<=strs[0].length();i++){
                tempSubString = strs[0].substring(0,i);
                inHowManyStringsPrefixIs = 1;
                for(int z=1;z<strs.length;z++){
                        for(int x=0;x<=strs[z].length();x++){
                            tempSubString2 = strs[z].substring(0,x);
                            if(tempSubString.equals(tempSubString2)){
                                inHowManyStringsPrefixIs++;
                            }
                            
                        }
                }
                if(tempSubString.length() > longestCommonPrefix && inHowManyStringsPrefixIs==strs.length){
                                longestCommonPrefix = tempSubString.length();
                                longestCommonPrefixString = tempSubString;
                            }
            }
        return longestCommonPrefixString;
    }
}

/*
-------------------------------------------------------------------------------------------------------------------------
https://leetcode.com/problems/longest-common-prefix/
Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".
Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"
*/
