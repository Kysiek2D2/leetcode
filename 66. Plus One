class Solution {
    public int[] plusOne(int[] digits) {
        
        int arrayLength = digits.length;
        boolean transferNumber = true;
        
        //if final number will have more digits than original one:
        if(Arrays.stream(digits).boxed().filter(i -> i==9).count()==arrayLength)
        {
            System.out.println("New array construction...");
            int[] outputArray = new int[arrayLength+1];
            outputArray[0]=1;
            for(int i=1;i<outputArray.length;i++)
            {
                outputArray[i]=0;
            }
            return outputArray;
        }
        
        //if final number will have same number of digits like original one:
        for(int i=arrayLength-1;i>=0;i--)
        {
            if(transferNumber)
            {
                if(digits[i]==9)
                {
                    digits[i]=0;
                }
                else
                {
                    transferNumber=false;
                    digits[i]+=1;
                }   
            }
        }
       return digits;
    }
}

/*
-------------------------------------------------------------------------------
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. 
The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.
*/
