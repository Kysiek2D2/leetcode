class Solution {
    public int maxSubArray(int[] nums) {
        
        int biggestSum = Integer.MIN_VALUE;
        int tempSum = 0;

        for(int i=0;i<nums.length;i++)
        {
            tempSum=0;
            for(int j=i;j<nums.length;j++)
            {
                tempSum += nums[j];
                if(tempSum>biggestSum)
                    biggestSum=tempSum;
            }
        }
        return biggestSum;
    }
}

/*
------------------------------------------------------------------------------------
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

A subarray is a contiguous part of an array.

Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
*/
